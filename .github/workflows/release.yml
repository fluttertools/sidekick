on:
  release:
    types: # This configuration does not affect the page_build event above
      - created

name: Release Artifacts

jobs:
  build-linux:
    name: "Build Linux"
    runs-on: ubuntu-18.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@master

      - name: Install Linux build tools
        run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev liblzma-dev

      - name: Enable desktop
        run: flutter config --enable-linux-desktop

      - name: Install Cider
        run: flutter pub global activate cider

      - name: Set new Flutter version
        run: cider version ${{ github.event.release.tag_name }}

      - name: Set Sidekick.desktop version
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: Sidekick.desktop
          contents: Version=${{ github.event.release.tag_name }}
          write-mode: append

      - name: Set Sidekick.desktop version (snap version)
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: snap/gui/sidekick.desktop
          contents: Version=${{ github.event.release.tag_name }}
          write-mode: append

      - name: Set snapcraft.yaml version
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: snap/snapcraft.yaml
          contents: 'version: "${{ github.event.release.tag_name }}"'
          write-mode: append

      - name: Set release changelog
        run: cider release

      - name: Flutter get packages
        run: flutter pub get

      - name: Build Runner & version
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Flutter build app
        run: flutter build linux

      - name: Compress artifacts
        uses: TheDoctor0/zip-release@0.4.1
        with:
          filename: linux-${{ github.event.release.tag_name }}.zip

      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          # GitHub token.
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # Local file to upload.
          file: linux-${{ github.event.release.tag_name }}.zip
          # Tag to use as a release.
          tag: ${{ github.ref }}

      - name: Build AppImage
        uses: AppImageCrafters/build-appimage@master
        with:
          recipe: "AppImageBuilder.yml"

      - name: Upload AppImage to release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          # GitHub token.
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # Local file to upload.
          file: Sidekick-latest-x86_64.AppImage
          asset_name: sidekick-linux-${{ github.event.release.tag_name }}.AppImage
          # Tag to use as a release.
          tag: ${{ github.ref }}

  build-macos:
    name: "Build MacOS"
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@master

      - name: Set Up XCode
        uses: devbotsxyz/xcode-select@v1.1.0

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Enable desktop
        run: flutter config --enable-macos-desktop

      - name: Install Cider
        run: flutter pub global activate cider

      - name: Set new Flutter version
        run: cider version ${{ github.event.release.tag_name }}

      - name: Set release changelog
        run: cider release

      - name: Flutter get packages
        run: flutter pub get

      - name: Build Runner & version
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Flutter build app
        run: flutter build macos

      - name: Create dmg
        run: |
          ./scripts/create_mac_dmg.sh

      - name: Compress artifacts
        run: zip -r macos-${{ github.event.release.tag_name }}.zip build/macos/Build/Products/Release

      - name: Upload artifacts to release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          # GitHub token.
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # Local file to upload.
          file: macos-${{ github.event.release.tag_name }}.zip
          # Tag to use as a release.
          tag: ${{ github.ref }}

      - name: Upload DMG to release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          # GitHub token.
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # Local file to upload.
          file: build/macos/Build/Products/Release/Sidekick.dmg
          asset_name: sidekick-macos-${{ github.event.release.tag_name }}.dmg
          # Tag to use as a release.
          tag: ${{ github.ref }}

  build-windows-msstore:
    name: "Build Windows for MS Store"
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@master

      - name: Enable desktop
        run: flutter config --enable-windows-desktop

      - name: Install Cider
        run: flutter pub global activate cider

      - name: Set new Flutter version
        run: cider version ${{ github.event.release.tag_name }}

      - name: Set release changelog
        run: cider release

      - name: Generate MSIX-compatible version
        uses: ashley-taylor/regex-property-action@1.2
        id: msixver
        with:
          value: ${{ github.event.release.tag_name }}
          regex: (\-\w+)|(\+\w+)
          replacement: ""

      - name: Write MSIX
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: pubspec.yaml
          contents: |
            msix_config:
              display_name: Sidekick
              publisher_display_name: Eduardo M.
              identity_name: 44484EduardoM.SidekickFlutter
              publisher: CN=1E781C91-227E-4505-B5B8-7E5EFE39D3A6
              msix_version: ${{steps.msixver.outputs.value }}.0
              logo_path: .\macos\Runner\Assets.xcassets\AppIcon.appiconset\app_icon_128.png
              start_menu_icon_path: .\macos\Runner\Assets.xcassets\AppIcon.appiconset\app_icon_128.png
              tile_icon_path: .\macos\Runner\Assets.xcassets\AppIcon.appiconset\app_icon_128.png
              icons_background_color: transparent
              architecture: x64
              capabilities: "internetClient,removableStorage"
              certificate_path: windows\SIDEKICK-CERT.pfx
              certificate_password: ${{ secrets.WIN_CERT_PASS }}
              store: true
          write-mode: append

      - name: Write MS Store true
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: lib/modifiers.dart
          contents: |
            // Generated file. Do not modify
            const isMSStore = false;
          write-mode: overwrite

      - name: Flutter get packages
        run: flutter pub get

      - name: Build Runner & version
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Flutter build app
        run: flutter build windows

      - name: Create MSIX
        run: flutter pub run msix:create

      - name: Upload MSIX to release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/windows/Runner/release/sidekick.msix
          asset_name: sidekick-windows-${{ github.event.release.tag_name }}-MS-NS.msix
          tag: ${{ github.ref }}

      # TODO: Upload automatically to MS Store. MSFT is having some issues with their Azure AD so cannot be done yet.
    
  build-windows-standard:
    name: "Build Windows standard"
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@master

      - name: Enable desktop
        run: flutter config --enable-windows-desktop

      - name: Install Cider
        run: flutter pub global activate cider

      - name: Set new Flutter version
        run: cider version ${{ github.event.release.tag_name }}

      - name: Set release changelog
        run: cider release

      - name: Generate MSIX-compatible version
        uses: ashley-taylor/regex-property-action@1.2
        id: msixver
        with:
          value: ${{ github.event.release.tag_name }}
          regex: (\-\w+)|(\+\w+)
          replacement: ""

      - name: Write MSIX
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: pubspec.yaml
          contents: |
            msix_config:
              display_name: Sidekick
              publisher_display_name: Eduardo M.
              identity_name: 44484EduardoM.SidekickFlutter
              publisher: CN=1E781C91-227E-4505-B5B8-7E5EFE39D3A6
              msix_version: ${{steps.msixver.outputs.value }}.0
              logo_path: .\macos\Runner\Assets.xcassets\AppIcon.appiconset\app_icon_128.png
              start_menu_icon_path: .\macos\Runner\Assets.xcassets\AppIcon.appiconset\app_icon_128.png
              tile_icon_path: .\macos\Runner\Assets.xcassets\AppIcon.appiconset\app_icon_128.png
              icons_background_color: transparent
              architecture: x64
              capabilities: "internetClient,removableStorage"
              certificate_path: windows\SIDEKICK-CERT.pfx
              certificate_password: ${{ secrets.WIN_CERT_PASS }}
              store: false
          write-mode: append

      - name: Flutter get packages
        run: flutter pub get

      - name: Build Runner & version
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Flutter build app
        run: flutter build windows

      - name: Create MSIX
        run: flutter pub run msix:create

      - name: Compress artifacts
        run: tar.exe -a -c -f windows-${{ github.event.release.tag_name }}.zip build/windows/Runner/release

      - name: Upload artifacts to release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: windows-${{ github.event.release.tag_name }}.zip
          tag: ${{ github.ref }}

      - name: Upload MSIX to release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/windows/Runner/release/sidekick.msix
          asset_name: sidekick-windows-${{ github.event.release.tag_name }}.msix
          tag: ${{ github.ref }}
